{"version":3,"sources":["gyro.page.js","index.page.js"],"names":["Gyro","init","window","addEventListener","eventData","tiltLR","gamma","tiltFB","beta","dir","alpha","console","log","document","getElementById","innerHTML","Math","round","logo","style","webkitTransform","MozTransform","transform","innerText","ball","querySelector","garden","output","DeviceOrientationEvent","clientWidth","clientHeight","event","x","accelerationIncludingGravity","y","z","readyState"],"mappings":"AAAA,IAAIA,KAAO,CACTC,KAAM,WACA,2BAA4BC,QAC9BA,OAAOC,iBAAiB,oBAM1B,SAAkCC,GAChC,IAAIC,EAASD,EAAUE,MACnBC,EAASH,EAAUI,KACnBC,EAAML,EAAUM,MACpBC,QAAQC,IAAI,QACZC,SAASC,eAAe,YAAYC,UAAYC,KAAKC,MAAMZ,GAC3DQ,SAASC,eAAe,YAAYC,UAAYC,KAAKC,MAAMV,GAC3DM,SAASC,eAAe,eAAeC,UAAYC,KAAKC,MAAMR,GAC9D,IAAIS,EAAOL,SAASC,eAAe,WACnCI,EAAKC,MAAMC,gBAAkB,UAAYf,EAAS,yBAAoC,EAAVE,EAAc,OAC1FW,EAAKC,MAAME,aAAe,UAAYhB,EAAS,OAC/Ca,EAAKC,MAAMG,UAAY,UAAYjB,EAAS,yBAAoC,EAAVE,EAAc,SAjBb,GACvEI,QAAQC,IAAI,OAEZC,SAASC,eAAe,iBAAiBS,UAAY,wCAiBvD,IAAIC,EAAOX,SAASY,cAAc,SAC9BC,EAASb,SAASY,cAAc,WAChCE,EAASd,SAASY,cAAc,WAEhCvB,OAAO0B,yBACTD,EAAOZ,UAAY,aAGVW,EAAOG,YAAcL,EAAKK,YAC1BH,EAAOI,aAAeN,EAAKM,aAUtC5B,OAAOC,iBAAiB,eARxB,SAA2B4B,GACzBJ,EAAOZ,UAAYgB,EACnB,IAAIC,EAAID,EAAME,6BAA6BD,EACnCD,EAAME,6BAA6BC,EACnCH,EAAME,6BAA6BE,EAC3CR,EAAOZ,UAAYiB,IAGsC,KAInC,aAAxBnB,SAASuB,WACXnC,OAEAY,SAASV,iBAAiB,mBAAoB,WAC5CF,SASJA,KAAO,WACLD,KAAKC","sourcesContent":["const Gyro = {\n  init: () => {\n    if ('DeviceOrientationEvent' in window) {\n      window.addEventListener('deviceorientation', deviceOrientationHandler, false);\n      console.log(\"ok\");\n    } else {\n      document.getElementById('logoContainer').innerText = 'Device Orientation API not supported.';\n    }\n    \n    function deviceOrientationHandler (eventData) {\n      var tiltLR = eventData.gamma;\n      var tiltFB = eventData.beta;\n      var dir = eventData.alpha;\n      console.log(\"asas\");\n      document.getElementById(\"doTiltLR\").innerHTML = Math.round(tiltLR);\n      document.getElementById(\"doTiltFB\").innerHTML = Math.round(tiltFB);\n      document.getElementById(\"doDirection\").innerHTML = Math.round(dir);\n    \n      var logo = document.getElementById(\"imgLogo\");\n      logo.style.webkitTransform = \"rotate(\" + tiltLR + \"deg) rotate3d(1,0,0, \" + (tiltFB * -1) + \"deg)\";\n      logo.style.MozTransform = \"rotate(\" + tiltLR + \"deg)\";\n      logo.style.transform = \"rotate(\" + tiltLR + \"deg) rotate3d(1,0,0, \" + (tiltFB * -1) + \"deg)\";\n    }\n\n    var ball = document.querySelector('.ball');\n    var garden = document.querySelector('.garden');\n    var output = document.querySelector('.output');\n\n    if (window.DeviceOrientationEvent) {\n      output.innerHTML = 'it works!';\n    }\n    var maxX = garden.clientWidth - ball.clientWidth;\n    var maxY = garden.clientHeight - ball.clientHeight;\n\n\n\n    function handleMotionEvent(event) {\n\n    output.innerHTML = event;\n\n    var x = event.accelerationIncludingGravity.x;\n    var y = event.accelerationIncludingGravity.y;\n    var z = event.accelerationIncludingGravity.z;\n\n    output.innerHTML = x;\n\n    // Do something awesome.\n    }\n\n    window.addEventListener(\"devicemotion\", handleMotionEvent, true);\n  }\n}","/* === On DOM load === */\n\nif(document.readyState === 'complete') {\n  init();\n} else {\n  document.addEventListener('DOMContentLoaded', () => {\n    init();\n  });\n}\n\n/**\n * Init function, executed on document load\n * Move all functions which need to be executed on pageload here\n */\ninit = () => {\n  Gyro.init();\n}\n"],"file":"script.min.js"}